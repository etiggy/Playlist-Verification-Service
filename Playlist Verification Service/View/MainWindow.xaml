<Window Background="#FF252525" MinHeight="600" Height="600" MinWidth="1100" Width="1100" WindowStyle="None" ResizeMode="NoResize"
        Title="Playlist Verification Service" FontSize="14" FontFamily="Segoe UI" Icon="/Resources/app_icon.ico" MouseLeftButtonDown="Window_MouseDown"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Playlist_Verification_Service"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Class="Playlist_Verification_Service.MainWindow"
        mc:Ignorable="d" AllowsTransparency="False">    
    <Window.ContextMenu>
        <ContextMenu Background="#FF474747" BorderBrush="#FF1585B5" BorderThickness="0" Margin="-33,0,-46,0" Padding="3" Foreground="White" FontSize="11" FontWeight="DemiBold">
            <MenuItem Click="MenuItem_ManageFolders" Margin="5,1,0,1">
                <MenuItem.Header>
                    <Grid>
                        <Image Height="20" Stretch="Uniform" Source="/Resources/gear32.png" HorizontalAlignment="Left"/>
                        <TextBlock Text="MANAGE FOLDERS" Margin="25,0,0,0" VerticalAlignment="Center"/>
                    </Grid>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Click="MenuItem_ChannelSettings" Margin="5,1,0,1">
                <MenuItem.Header>
                    <Grid>
                        <Image Height="20" Stretch="Uniform" Source="/Resources/gear32.png" HorizontalAlignment="Left"/>
                        <TextBlock Text="CHANNEL SETTINGS" Margin="25,0,0,0" VerticalAlignment="Center"/>
                    </Grid>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Click="MenuItem_BatchProcessAllNew" Margin="5,1,0,1">
                <MenuItem.Header>
                    <Grid>
                        <Image Height="20" Stretch="Uniform" Source="/Resources/refresh32.png" HorizontalAlignment="Left"/>
                        <TextBlock Text="CHECK ALL NEW" Margin="25,0,0,0" VerticalAlignment="Center"/>
                    </Grid>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Click="MenuItem_BatchProcessAll" Margin="5,1,0,1">
                <MenuItem.Header>
                    <Grid>
                        <Image Height="20" Stretch="Uniform" Source="/Resources/refresh32.png" HorizontalAlignment="Left"/>
                        <TextBlock Text="RE-CHECK ALL" Margin="25,0,0,0" VerticalAlignment="Center"/>
                    </Grid>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Click="MenuItem_Quit" Margin="5,1,0,1">
                <MenuItem.Header>
                    <Grid>
                        <Image Height="20" Stretch="Uniform" Source="/Resources/quit32.png" HorizontalAlignment="Left"/>
                        <TextBlock Text="QUIT" Margin="25,0,0,0" VerticalAlignment="Center"/>
                    </Grid>
                </MenuItem.Header>
            </MenuItem>
        </ContextMenu>
    </Window.ContextMenu>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="245"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="428"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.ColumnSpan="3" Height="30">
            <Grid.Background>
                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                    <GradientStop Color="#FF474747" Offset="0"/>
                    <GradientStop Color="#FF252525" Offset="1"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Image Source="/Resources/app_icon.png" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Height="16" Stretch="Uniform"/>
            <TextBlock Text="PLAYLIST VERIFICATION SERVICE" Foreground="White" FontWeight="SemiBold" Margin="35,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            
            <Border BorderThickness="0" Margin="0,0,80,0" Height="30" Width="40" HorizontalAlignment="Right" 
                VerticalAlignment="Center" PreviewMouseLeftButtonDown="MinimiseWindow">
                <Grid>
                    <Image Source="/Resources/minimise.png" Height="16" Stretch="Uniform"/>
                </Grid>
                <Border.Style>
                    <Style>
                        <Setter Property="Border.Background" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="Border.IsMouseOver" Value="True">
                                <Setter Property="Border.Background" Value="#FF474747" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>

            <Border BorderThickness="0" Margin="0,0,40,0" Height="30" Width="40" HorizontalAlignment="Right" 
                VerticalAlignment="Bottom" PreviewMouseLeftButtonDown="MaximiseWindow">
                <Grid>
                    <Image Source="/Resources/maximise.png" Height="16" Stretch="Uniform"/>
                </Grid>
                <Border.Style>
                    <Style>
                        <Setter Property="Border.Background" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="Border.IsMouseOver" Value="True">
                                <Setter Property="Border.Background" Value="#FF474747" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>

            <Border BorderThickness="0" Margin="0" Height="30" Width="40" HorizontalAlignment="Right" 
                VerticalAlignment="Bottom" PreviewMouseLeftButtonDown="CloseWindow">
                <Grid>
                    <Image Source="/Resources/close.png" Height="16" Stretch="Uniform"/>
                </Grid>
                <Border.Style>
                    <Style>
                        <Setter Property="Border.Background" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="Border.IsMouseOver" Value="True">
                                <Setter Property="Border.Background" Value="#FF474747" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>

        <Border Grid.Row="1" BorderBrush="#FFC3C3C3" Background="#FFB2B2B2" Margin="10,2,5,0" Padding="5,2" BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="FilelistSearchbox" Grid.Column="0" Background="Transparent" BorderThickness="0" TextChanged="FilelistSearchbox_TextChanged"/>
                <Image Grid.Column="1" Stretch="None" Source="/Resources/search16.png" Margin="5,0,0,0"/>
            </Grid>
        </Border>

        <Border Grid.Row="1" Grid.Column="1" BorderBrush="#FFC3C3C3" Background="#FFB2B2B2" Margin="5,2,5,0" Padding="5,2" BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="ErrorSearchbox" Grid.Column="0" Background="Transparent" BorderThickness="0" TextChanged="ErrorSearchbox_TextChanged"/>
                <Image Grid.Column="1" Stretch="None" Source="/Resources/search16.png" Margin="5,0,0,0"/>
            </Grid>
        </Border>

        <Border Grid.Row="1" Grid.Column="2" BorderBrush="#FFC3C3C3" Background="#FFB2B2B2" Margin="5,2,10,0" Padding="5,2" BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="PlaylistSearchbox" Grid.Column="0" Background="Transparent" BorderThickness="0" TextChanged="PlaylistSearchbox_TextChanged"/>
                <Image Grid.Column="1" Stretch="None" Source="/Resources/search16.png" Margin="5,0,0,0"/>
            </Grid>
        </Border>

        <Border Grid.Row="2" Grid.Column="0" BorderBrush="#FF1585B5" BorderThickness="1" Margin="10,5,5,10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Label Content="LIST OF FILES" FontSize="11" FontWeight="DemiBold" Background="#FF1585B5" Foreground="White" Grid.Row="0"/>
                <ListBox x:Name="FileListbox" HorizontalContentAlignment="Stretch" Margin="5,4,2,4" Background="Transparent" 
                 ItemsSource="{Binding}" SelectionMode="Single" Grid.Row="1" BorderThickness="0"
                 SelectionChanged="FilelistListbox_SelectionChanged" ScrollViewer.VerticalScrollBarVisibility="Visible" 
                 ScrollViewer.IsDeferredScrollingEnabled="False" VirtualizingStackPanel.IsVirtualizing="True" 
                 VirtualizingStackPanel.CacheLength="2,3" VirtualizingStackPanel.CacheLengthUnit="Page" 
                 VirtualizingStackPanel.ScrollUnit="Pixel" VirtualizingStackPanel.IsContainerVirtualizable="True" 
                 VirtualizingStackPanel.VirtualizationMode="Recycling" ItemContainerStyle="{DynamicResource ListBoxItemStyle}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border Name="Border" BorderBrush="#FFC3C3C3" Background="Transparent" BorderThickness="0,1" Margin="0,1,1,1" Padding="2">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding state}" Value="new">
                                                <Setter Property="ToolTip" Value="New file"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding state}" Value="ok">
                                                <Setter Property="ToolTip" Value="No errors found"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding state}" Value="processing">
                                                <Setter Property="ToolTip" Value="Processing..."/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding state}" Value="error">
                                                <Setter Property="ToolTip" Value="Errors found"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding state}" Value="fileerror">
                                                <Setter Property="ToolTip" Value="Invalid file format"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="160"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="{Binding FileName}" VerticalAlignment="Center" Foreground="White" FontWeight="DemiBold"/>
                                    <TextBlock Text="{Binding LastWriteTimeString}" Grid.Row="1" FontSize="12" VerticalAlignment="Center" Foreground="White"/>
                                    <Image Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Right" VerticalAlignment="Center" Height="32" Stretch="None" Margin="5,0,0,0">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding state}" Value="new">
                                                        <Setter Property="Source"  Value="/Resources/add32.png"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding state}" Value="ok">
                                                        <Setter Property="Source"  Value="/Resources/checkmark32.png"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding state}" Value="processing">
                                                        <Setter Property="Source"  Value="/Resources/refresh32.png"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding state}" Value="error">
                                                        <Setter Property="Source"  Value="/Resources/negative32.png"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding state}" Value="fileerror">
                                                        <Setter Property="Source"  Value="/Resources/cancel32.png"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Grid>
                            </Border>
                            <DataTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="#FF474747"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBox}}, Path=IsSelectionActive}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="#FF5D5D5D"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBox}}, Path=IsSelectionActive}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="#FF5D5D5D"/>
                                </MultiDataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </Border>

        <Border Grid.Row="2" Grid.Column="1" BorderBrush="#FF1585B5" BorderThickness="1" Margin="5,5,5,10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Label Content="LIST OF ERRORS" FontSize="11" FontWeight="DemiBold" Background="#FF1585B5" Foreground="White" Grid.Row="0"/>
                <ListBox x:Name="ErrorListbox" HorizontalContentAlignment="Stretch" Margin="5,4,2,4" Grid.Row="1" ScrollViewer.VerticalScrollBarVisibility="Visible"
                  ItemsSource="{Binding}" BorderThickness="0" Background="Transparent" SelectionMode="Single" SelectionChanged="ErrorListbox_SelectionChanged"
                  ScrollViewer.IsDeferredScrollingEnabled="False" 
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.CacheLength="2,3"
                  VirtualizingStackPanel.CacheLengthUnit="Page"
                  VirtualizingStackPanel.ScrollUnit="Pixel"
                  VirtualizingStackPanel.IsContainerVirtualizable="True"
                  VirtualizingStackPanel.VirtualizationMode="Recycling" 
                  ItemContainerStyle="{DynamicResource ListBoxItemStyle}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border Name="Border" BorderBrush="#FFC3C3C3" Background="Transparent" BorderThickness="0,1" Margin="0,1,1,1" Padding="2" ToolTip="{Binding tooltip}">                                
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Foreground="White" Text="{Binding Path=check}" FontWeight="DemiBold"/>
                                    <Image Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Right" VerticalAlignment="Top" Height="32" Stretch="None" Margin="5,0,0,0">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding severity}" Value="ok">
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding severity}" Value="low">
                                                        <Setter Property="Source" Value="/Resources/negative32.png"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding severity}" Value="medium">
                                                        <Setter Property="Source" Value="/Resources/negative32.png"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding severity}" Value="high">
                                                        <Setter Property="Source" Value="/Resources/negative32.png"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <TextBlock Grid.Row="1" Foreground="White" FontSize="12" Text="{Binding Path=message}"/>
                                </Grid>
                            </Border>
                            <DataTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="#FF474747"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBox}}, Path=IsSelectionActive}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="#FF5D5D5D"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBox}}, Path=IsSelectionActive}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="#FF5D5D5D"/>
                                </MultiDataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </Border>

        <Border Grid.Row="2" Grid.Column="2" BorderBrush="#FF1585B5" BorderThickness="1" Margin="5,5,10,10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Label Content="LIST OF EVENTS" FontSize="11" FontWeight="DemiBold" Background="#FF1585B5" Foreground="White" Grid.Row="0"/>
                <ListBox x:Name="PlayListbox" HorizontalContentAlignment="Stretch" Margin="5,4,2,4" Grid.Row="1" 
                  ItemsSource="{Binding}" BorderThickness="0" Background="Transparent" SelectionMode="Single" ScrollViewer.VerticalScrollBarVisibility="Visible"
                  ScrollViewer.IsDeferredScrollingEnabled="False" 
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.CacheLength="2,3"
                  VirtualizingStackPanel.CacheLengthUnit="Page"
                  VirtualizingStackPanel.ScrollUnit="Pixel"
                  VirtualizingStackPanel.IsContainerVirtualizable="True"
                  VirtualizingStackPanel.VirtualizationMode="Recycling" 
                  ItemContainerStyle="{DynamicResource ListBoxItemStyle}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border Name="OuterBorder" BorderThickness="2" Margin="0,0,1,0" ToolTip="{Binding tooltip}">
                                <Border Name="InnerBorder" BorderThickness="1" Padding="4,2">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding subtype}" Value="Bug">
                                                    <Setter Property="Background"  Value="Orange"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding subtype}" Value="Opt In">
                                                    <Setter Property="Background"  Value="PowderBlue"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding subtype}" Value="Opt Out">
                                                    <Setter Property="Background"  Value="PowderBlue"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding subtype}" Value="Voice Over">
                                                    <Setter Property="Background"  Value="Magenta"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding subtype}" Value="Zip">
                                                    <Setter Property="Background"  Value="Yellow"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding subtype}" Value="Dyn. Menu">
                                                    <Setter Property="Background"  Value="Plum"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding subtype}" Value="ECS">
                                                    <Setter Property="Background"  Value="PaleGreen"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding subtype}" Value="DVE">
                                                    <Setter Property="Background"  Value="PeachPuff"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding subtype}" Value="Programme">
                                                    <Setter Property="Background"  Value="Aqua"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding subtype}" Value="Commercial">
                                                    <Setter Property="Background"  Value="Snow"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding subtype}" Value="Interstitial">
                                                    <Setter Property="Background"  Value="Pink"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding subtype}" Value="Promotion">
                                                    <Setter Property="Background"  Value="LawnGreen"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding subtype}" Value="Unknown">
                                                    <Setter Property="Background"  Value="LightGray"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding type}" Value="EOF">
                                                    <Setter Property="Background"  Value="Gray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="365"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" HorizontalAlignment="Left" FontWeight="DemiBold" FontSize="13" Text="{Binding starttime_wframes}"/>
                                        <!--11 char-->
                                        <TextBlock Grid.Row="0" HorizontalAlignment="Left" Margin="85,0,0,0" FontWeight="DemiBold" FontSize="13" Text="{Binding title}"/>
                                        <!--40 char-->
                                        <TextBlock Grid.Row="1" HorizontalAlignment="Left" FontSize="12" Text="{Binding duration_wframes}"/>
                                        <!--11 char-->
                                        <TextBlock Grid.Row="1" HorizontalAlignment="Left" Margin="65,0,0,0" FontSize="12" Text="{Binding type}"/>
                                        <!-- 9 char-->
                                        <TextBlock Grid.Row="1" HorizontalAlignment="Left" Margin="125,0,0,0" FontSize="12" Text="{Binding subtype}"/>
                                        <!--12 char-->
                                        <TextBlock Grid.Row="1" HorizontalAlignment="Left" Margin="195,0,0,0" FontSize="12" Text="{Binding txid}"/>
                                        <!--20 char-->
                                        <TextBlock Grid.Row="1" HorizontalAlignment="Right" FontSize="12">                                 
                                        <!-- 9 char-->
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding isfixed}" Value="True">
                                                            <Setter Property="Text" Value="Fixed"/>
                                                            <Setter Property="FontWeight" Value="DemiBold"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding isfixed}" Value="False">
                                                            <Setter Property="Text" Value="Follow On"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </Border>
                            </Border>
                            <DataTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="InnerBorder" Property="BorderBrush" Value="Black"/>
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBox}}, Path=IsSelectionActive}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="InnerBorder" Property="BorderBrush" Value="Black"/>
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ListBox}}, Path=IsSelectionActive}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="InnerBorder" Property="BorderBrush" Value="Black"/>
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"/>
                                </MultiDataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </Border>
    </Grid>
</Window>
